C51 COMPILER V9.56.0.0   USART                                                             04/06/2017 20:07:52 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Objects\usart.obj
COMPILER INVOKED BY: D:\Program Files (x86)\MDK5\C51\BIN\C51.EXE usart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\usart.lst) TABS(2) OBJECT(.\Objects\usart.obj)

line level    source

   1          #include "usart.h"
   2          
   3          #define Uart1_Buf_Max 100               //串口数据缓存长度
   4          u8 xdata Rec_Buf[Uart1_Buf_Max];     //串口数据缓存
   5          //u8 xdata  Flag[]="X";   //标志位数据数据
   6          u8 point1 = 0;                          //缓存指针
   7          bit busy;
   8          u8 point2 = 0;
   9          u8 xdata KIND = 0;
  10          //  sbit LED =P5^5 ;        //信号输出
  11          u8 counter;
  12          WORD counter1;
  13          
  14          void USART_Init()
  15          {
  16   1        ACC = P_SW1;
  17   1        ACC &= ~(S1_S0|S1_S1);
  18   1        ACC |= S1_S0;   //  串口一设为   P3.6RXD P3.7TXD
  19   1        P_SW1 = ACC;
  20   1        
  21   1          SCON=0x50;
  22   1          T2L=(65536-(FOSC/4/BAUD));
  23   1          T2H=(65536-(FOSC/4/BAUD))>>8;
  24   1          AUXR=0X14;                        //
  25   1          AUXR|=0X01;
  26   1          ES=1;
  27   1          EA=1;
  28   1        
  29   1          TMOD = 0x01;           //定时器 0  
  30   1          IE   |= 0x82;
  31   1          TH0  = 0xc4;
  32   1          TL0  = 0x00;           //  18.432m晶振  ,10ms
  33   1          TR0=1;  
  34   1        
  35   1          counter1=0;
  36   1          zw_success=0;
  37   1       } 
  38          
  39          void Time0_Int() interrupt 1 //定时器0中断程序
  40          {
  41   1          TH0  = 0xc4;             //重新赋值
  42   1          TL0  = 0x00;
  43   1          counter++;
  44   1          if(counter==20){      //400ms  闪一次
  45   2            LED = ~LED;
  46   2            counter = 0;
  47   2            counter1++;
  48   2          }
  49   1      }
  50           
  51          void Uart() interrupt 4 using 1
  52          {
  53   1        ES=0;
  54   1          if (RI) {
C51 COMPILER V9.56.0.0   USART                                                             04/06/2017 20:07:52 PAGE 2   

  55   2              RI=0;
  56   2              Rec_Buf[point1] = SBUF; 
  57   2          switch(Rec_Buf[point1]){         //判断出遇到的指令种类  并用point2记录终止在缓存数组的位置    
  58   3            case 0xFE:  //收到上行指令
  59   3            point2=point1;  
  60   3            KIND = 1;
  61   3            break;  
  62   3            
  63   3            case 0xFD:  //收到下行指令
  64   3            point2=point1;  
  65   3            KIND = 2;
  66   3            break;  
  67   3            
  68   3            case 0xFC:  //收到组网上行指令
  69   3            point2=point1;  
  70   3            KIND = 3;
  71   3            break;  
  72   3            
  73   3            case 0xFB:  //收到组网下行指令
  74   3            point2=point1;  
  75   3            KIND = 4;
  76   3            break;  
  77   3            
  78   3            case 0xFA:  //测试指令
  79   3            point2=point1;  
  80   3            KIND = 5;
  81   3            break;  
  82   3          }     
  83   2              point1++;               
  84   2              if(point1>=Uart1_Buf_Max-1)          
  85   2              {
  86   3                point1 = 0;
  87   3              } 
  88   2        }
  89   1           if(TI)
  90   1           {
  91   2             TI=0;
  92   2             busy=0;
  93   2           }
  94   1        ES=1;
  95   1      }
  96          
  97          void SendData(BYTE dat)
  98          {
  99   1        while(busy);
 100   1          ACC=dat;
 101   1          busy=1;
 102   1          SBUF=ACC;
 103   1      }
 104          
 105          void SendString(char*s)
 106           {
 107   1           while (*s)
 108   1           {
 109   2                 SendData(*s++);
 110   2        }
 111   1      }
 112           
 113          void CLR_Buf(void)                           // 清除缓存
 114          {
 115   1        memset(Rec_Buf, 0, Uart1_Buf_Max);      //
 116   1      
C51 COMPILER V9.56.0.0   USART                                                             04/06/2017 20:07:52 PAGE 3   

 117   1          point1 = 0;                    
 118   1      }
 119          
 120          void delay_ms(unsigned int n)
 121          {
 122   1        unsigned int  i,j,m;
 123   1        for(m = 0 ; m < 10 ; m++)
 124   1          for(i=0;i<n;i++)
 125   1            for(j=0;j<123;j++);
 126   1      }
 127          
 128           //   void soft_reset(void)  //重启指令 
 129           //  {
 130           //      ((void (code *) (void)) 0x0000) ();
 131           //  }
 132          
 133          
 134          unsigned int sendCommand(char *Command, char *Response)  //发送标准指令(用退避算法)
 135          {
 136   1        unsigned char n,Time_Cont;
 137   1        CLR_Buf(); 
 138   1        KIND = 0;
 139   1        for (n = 0; n <10; n++)
 140   1        {
 141   2          SendString(Command);    //???? 
 142   2          delay_ms(50);
 143   2          Time_Cont = 0;
 144   2          while (Time_Cont < 10)
 145   2          {
 146   3            delay_ms(1);
 147   3            Time_Cont += 1;
 148   3            if (strstr(Rec_Buf, Response) != NULL)
 149   3            {
 150   4              
 151   4          //    CLR_Buf();
 152   4              return Success;
 153   4            }
 154   3            
 155   3          }
 156   2          Time_Cont = 0;
 157   2        }
 158   1        for (; n <16; n++)
 159   1        {
 160   2          delay_ms(rand()%1024*50);   //实现退避
 161   2          SendString(Command);    //发送指令 
 162   2          delay_ms(50);
 163   2          Time_Cont = 0;
 164   2          while (Time_Cont < 10)
 165   2          {
 166   3            delay_ms(1);
 167   3            Time_Cont += 1;
 168   3            if (strstr(Rec_Buf, Response) != NULL)
 169   3            {
 170   4              
 171   4            //  CLR_Buf();
 172   4              return Success;
 173   4            }
 174   3            
 175   3          }
 176   2          Time_Cont = 0;
 177   2        }
 178   1        CLR_Buf();
C51 COMPILER V9.56.0.0   USART                                                             04/06/2017 20:07:52 PAGE 4   

 179   1        return Failure;
 180   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    518    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    101    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
