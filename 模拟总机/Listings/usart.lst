C51 COMPILER V9.56.0.0   USART                                                             04/05/2017 20:00:18 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Objects\usart.obj
COMPILER INVOKED BY: D:\Program Files (x86)\MDK5\C51\BIN\C51.EXE usart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\usart.lst) TABS(2) OBJECT(.\Objects\usart.obj)

line level    source

   1          #include "usart.h"
   2          
   3          #define Uart1_Buf_Max 100               //串口数据缓存长度
   4          u8 xdata Rec_Buf[Uart1_Buf_Max];     //串口数据缓存
   5          //u8 xdata  Flag[]="X";   //标志位数据数据
   6          u8 point1 = 0;                          //缓存指针
   7          bit busy;
   8          u8 point2 = 0;
   9          u8 xdata KIND = 0;
  10          //  sbit LED =P5^5 ;        //信号输出
  11          u8 counter;
  12          
  13          void USART_Init()
  14          {
  15   1        ACC = P_SW1;
  16   1        ACC &= ~(S1_S0|S1_S1);
  17   1        ACC |= S1_S0;   //  串口一设为   P3.6RXD P3.7TXD
  18   1        P_SW1 = ACC;
  19   1        
  20   1          SCON=0x50;
  21   1          T2L=(65536-(FOSC/4/BAUD));
  22   1          T2H=(65536-(FOSC/4/BAUD))>>8;
  23   1          AUXR=0X14;                        //
  24   1          AUXR|=0X01;
  25   1          ES=1;
  26   1          EA=1;
  27   1        
  28   1          TMOD = 0x01;           //定时器 0  
  29   1          IE   |= 0x82;
  30   1          TH0  = 0x2E;
  31   1          TL0  = 0x00;           //  18.432m晶振  ,10ms
  32   1          TR0=1;  
  33   1       } 
  34          
  35          void Time0_Int() interrupt 1 //定时器0中断程序
  36          {
  37   1      TH0  = 0x2E;             //重新赋值
  38   1      TL0  = 0x00;
  39   1      counter++;
  40   1      if(counter==20){      //400ms  闪一次
  41   2          LED = ~LED;
  42   2          counter = 0;
  43   2      }
  44   1      }
  45           
  46          void Uart() interrupt 4 using 1
  47          {
  48   1        ES=0;
  49   1          if (RI) {
  50   2              RI=0;
  51   2              Rec_Buf[point1] = SBUF; 
  52   2          switch(Rec_Buf[point1]){         //判断出遇到的指令种类  并用point2记录终止在缓存数组的位置    
  53   3            case 0xFE:  //收到上行指令
  54   3            point2=point1;  
C51 COMPILER V9.56.0.0   USART                                                             04/05/2017 20:00:18 PAGE 2   

  55   3            KIND = 1;
  56   3            break;  
  57   3            
  58   3            case 0xFD:  //收到下行指令
  59   3            point2=point1;  
  60   3            KIND = 2;
  61   3            break;  
  62   3            
  63   3            case 0xFC:  //收到组网上行指令
  64   3            point2=point1;  
  65   3            KIND = 3;
  66   3            break;  
  67   3            
  68   3            case 0xFB:  //收到组网下行指令
  69   3            point2=point1;  
  70   3            KIND = 4;
  71   3            break;  
  72   3            
  73   3            case 0xFA:  //测试指令
  74   3            point2=point1;  
  75   3            KIND = 5;
  76   3            break;  
  77   3          }     
  78   2              point1++;               
  79   2              if(point1>=Uart1_Buf_Max-1)          
  80   2              {
  81   3                point1 = 0;
  82   3              } 
  83   2        }
  84   1           if(TI)
  85   1           {
  86   2             TI=0;
  87   2             busy=0;
  88   2           }
  89   1        ES=1;
  90   1      }
  91          
  92          void SendData(BYTE dat)
  93          {
  94   1        while(busy);
  95   1          ACC=dat;
  96   1          busy=1;
  97   1          SBUF=ACC;
  98   1      }
  99          
 100          void SendString(char*s)
 101           {
 102   1           while (*s)
 103   1           {
 104   2                 SendData(*s++);
 105   2        }
 106   1      }
 107           
 108          void CLR_Buf(void)                           // 清除缓存
 109          {
 110   1        memset(Rec_Buf, 0, Uart1_Buf_Max);      //
 111   1      
 112   1          point1 = 0;                    
 113   1      }
 114          
 115          void delay_ms(unsigned int n)
 116          {
C51 COMPILER V9.56.0.0   USART                                                             04/05/2017 20:00:18 PAGE 3   

 117   1        unsigned int  i,j,m;
 118   1        for(m = 0 ; m < 10 ; m++)
 119   1          for(i=0;i<n;i++)
 120   1            for(j=0;j<123;j++);
 121   1      }
 122          
 123          //void soft_reset(void)  //重启指令 
 124          //{
 125          //   ((void (code *) (void)) 0x0000) ();
 126          //}
 127          
 128          
 129          unsigned int sendCommand(char *Command, char *Response)  //发送标准指令(用退避算法)
 130          {
 131   1        unsigned char n,Time_Cont;
 132   1        CLR_Buf();  KIND = 0;
 133   1        for (n = 0; n <10; n++)
 134   1        {
 135   2          SendString(Command);    //???? 
 136   2          delay_ms(50);
 137   2          Time_Cont = 0;
 138   2          while (Time_Cont < 10)
 139   2          {
 140   3            delay_ms(1);
 141   3            Time_Cont += 1;
 142   3            if (strstr(Rec_Buf, Response) != NULL)
 143   3            {
 144   4              
 145   4              CLR_Buf();
 146   4              return Success;
 147   4            }
 148   3            
 149   3          }
 150   2          Time_Cont = 0;
 151   2        }
 152   1        for (; n <16; n++)
 153   1        {
 154   2          delay_ms(rand()%1024*50);   //实现退避
 155   2          SendString(Command);    //发送指令 
 156   2          delay_ms(50);
 157   2          Time_Cont = 0;
 158   2          while (Time_Cont < 10)
 159   2          {
 160   3            delay_ms(1);
 161   3            Time_Cont += 1;
 162   3            if (strstr(Rec_Buf, Response) != NULL)
 163   3            {
 164   4              
 165   4              CLR_Buf();
 166   4              return Success;
 167   4            }
 168   3            
 169   3          }
 170   2          Time_Cont = 0;
 171   2        }
 172   1        CLR_Buf();
 173   1        return Failure;
 174   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    507    ----
C51 COMPILER V9.56.0.0   USART                                                             04/05/2017 20:00:18 PAGE 4   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    101    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
