C51 COMPILER V9.56.0.0   USART                                                             04/09/2017 21:42:20 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Objects\usart.obj
COMPILER INVOKED BY: D:\Program Files (x86)\MDK5\C51\BIN\C51.EXE usart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\usart.lst) TABS(2) OBJECT(.\Objects\usart.obj)

line level    source

   1          #include "usart.h"
   2          
   3          #define Uart1_Buf_Max 100               //串口数据缓存长度
   4          u8 xdata Rec_Buf[Uart1_Buf_Max];     //串口数据缓存
   5          //u8 xdata  Flag[]="X";   //标志位数据数据
   6          u8 point1 = 0;                          //缓存指针
   7          bit busy;
   8          u8 point2 = 0;
   9          u8 xdata KIND = 0;
  10          //  sbit LED =P5^5 ;        //信号输出
  11          u8 counter;
  12          WORD counter1;
  13          
  14          void USART_Init()
  15          {
  16   1        ACC = P_SW1;
  17   1        ACC &= ~(S1_S0|S1_S1);
  18   1        ACC |= S1_S0;   //  串口一设为   P3.6RXD P3.7TXD
  19   1        P_SW1 = ACC;
  20   1        
  21   1          SCON=0x50;
  22   1          T2L=(65536-(FOSC/4/BAUD));
  23   1          T2H=(65536-(FOSC/4/BAUD))>>8;
  24   1          AUXR=0X14;                        //
  25   1          AUXR|=0X01;
  26   1          ES=1;
  27   1          EA=1;
  28   1        
  29   1          TMOD = 0x01;           //定时器 0  
  30   1          IE   |= 0x82;
  31   1          TH0  = 0xc4;
  32   1          TL0  = 0x00;           //  18.432m晶振  ,10ms
  33   1          TR0=1;  
  34   1        
  35   1          counter1=0;
  36   1          zw_success=0;
  37   1       } 
  38          
  39          void Time0_Int() interrupt 1 //定时器0中断程序
  40          {
  41   1          TH0  = 0xc4;             //重新赋值
  42   1          TL0  = 0x00;
  43   1          counter++;
  44   1          if(counter==20){      //400ms  闪一次
  45   2            LED = ~LED;
  46   2            counter = 0;
  47   2            counter1++;
  48   2          }
  49   1      }
  50           
  51          void Uart() interrupt 4 using 1
  52          {
  53   1        ES=0;
  54   1          if (RI) {
C51 COMPILER V9.56.0.0   USART                                                             04/09/2017 21:42:20 PAGE 2   

  55   2              RI=0;
  56   2              Rec_Buf[point1] = SBUF; 
  57   2          switch(Rec_Buf[point1]){         //判断出遇到的指令种类  并用point2记录终止在缓存数组的位置    
  58   3            case 0xFE:  //收到上行指令
  59   3            point2=point1;  
  60   3            KIND = 1;
  61   3            break;  
  62   3            
  63   3            case 0xFD:  //收到下行指令
  64   3            point2=point1;  
  65   3            KIND = 2;
  66   3            break;  
  67   3            
  68   3            case 0xFC:  //收到组网上行指令
  69   3            point2=point1;  
  70   3            KIND = 3;
  71   3            break;  
  72   3            
  73   3            case 0xFB:  //收到组网下行指令
  74   3            point2=point1;  
  75   3            KIND = 4;
  76   3            break;  
  77   3            
  78   3            case 0xFA:  //测试指令
  79   3            point2=point1;  
  80   3            KIND = 5;
  81   3            break;  
  82   3            
  83   3            case 0xFF:  //收到上行指令
  84   3            jd=13;
  85   3            break;
  86   3          }     
  87   2              point1++;               
  88   2              if(point1>=Uart1_Buf_Max-1)          
  89   2              {
  90   3                point1 = 0;
  91   3              } 
  92   2        }
  93   1           if(TI)
  94   1           {
  95   2             TI=0;
  96   2             busy=0;
  97   2           }
  98   1        ES=1;
  99   1      }
 100          
 101          void SendData(BYTE dat)
 102          {
 103   1        while(busy);
 104   1          ACC=dat;
 105   1          busy=1;
 106   1          SBUF=ACC;
 107   1      }
 108          
 109          void SendString(char*s)
 110           {
 111   1           while (*s)
 112   1           {
 113   2                 SendData(*s++);
 114   2        }
 115   1      }
 116           
C51 COMPILER V9.56.0.0   USART                                                             04/09/2017 21:42:20 PAGE 3   

 117          void CLR_Buf(void)                           // 清除缓存
 118          {
 119   1        memset(Rec_Buf, 0, Uart1_Buf_Max);      //
 120   1      
 121   1          point1 = 0;                    
 122   1      }
 123          
 124          void delay_ms(unsigned int n)
 125          {
 126   1        unsigned int  i,j,m;
 127   1        for(m = 0 ; m < 10 ; m++)
 128   1          for(i=0;i<n;i++)
 129   1            for(j=0;j<123;j++);
 130   1      }
 131          
 132           //   void soft_reset(void)  //重启指令 
 133           //  {
 134           //      ((void (code *) (void)) 0x0000) ();
 135           //  }
 136          
 137          
 138          unsigned int sendCommand(char *Command, char *Response)  //发送标准指令(用退避算法)
 139          {
 140   1        unsigned char n,Time_Cont;
 141   1        CLR_Buf();  KIND = 0;
 142   1        for (n = 0; n <10; n++)
 143   1        {
 144   2          SendString(Command);    //???? 
 145   2          delay_ms(100);
 146   2          Time_Cont = 0;
 147   2          while (Time_Cont < 10)
 148   2          {
 149   3            delay_ms(1);
 150   3            Time_Cont += 1;
 151   3            if (strstr(Rec_Buf, Response) != NULL)
 152   3            {
 153   4              
 154   4      //        CLR_Buf();
 155   4              return Success;
 156   4            }
 157   3            
 158   3          }
 159   2          Time_Cont = 0;
 160   2        }
 161   1        for (; n <16; n++)
 162   1        {
 163   2          delay_ms(rand()%1024*50);   //实现退避
 164   2          SendString(Command);    //发送指令 
 165   2          delay_ms(50);
 166   2          Time_Cont = 0;
 167   2          while (Time_Cont < 10)
 168   2          {
 169   3            delay_ms(1);
 170   3            Time_Cont += 1;
 171   3            if (strstr(Rec_Buf, Response) != NULL)
 172   3            {
 173   4              
 174   4      //      CLR_Buf();
 175   4              return Success;
 176   4            }
 177   3            
 178   3          }
C51 COMPILER V9.56.0.0   USART                                                             04/09/2017 21:42:20 PAGE 4   

 179   2          Time_Cont = 0;
 180   2        }
 181   1        CLR_Buf();
 182   1        return Failure;
 183   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    527    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    101    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
