C51 COMPILER V9.56.0.0   LCD12864_S                                                        04/18/2017 17:14:57 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD12864_S
OBJECT MODULE PLACED IN LCD12864_S.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\MDK5\C51\BIN\C51.EXE LCD12864_S.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEN
                    -D TABS(2)

line level    source

   1          #include "LCD12864_S.h"
   2          
   3          /**************************************************************
   4                         iO口宏定义区
   5          ***************************************************************/
   6          //   sbit CS =P2^2;
   7          //   sbit SID=P2^3;//r/w
   8          //   sbit SCK=P2^4;//e
   9             sbit CS =P1^2;
  10             sbit SID=P1^3;//r/w
  11             sbit SCK=P1^4;//e
  12          /*******************************************************************
  13                        常量声明区
  14          ********************************************************************/     
  15          unsigned char code AC_TABLE[]={                  //坐标编码
  16          0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,
  17          0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,
  18          0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,
  19          0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,
  20          };
  21          /****************************************************************
  22           声明：建议读者先查阅我们提供的12864word文档资料，理解12864定坐标的
  23           方式。                         
  24                        发送一个字节
  25          *****************************************************************/
  26          void SendByte(unsigned char Dbyte)
  27          {
  28   1        unsigned char i;
  29   1        for(i=0;i<8;i++)
  30   1        {
  31   2          SCK = 0;
  32   2          Dbyte=Dbyte<<1;
  33   2          SID = CY;
  34   2          SCK = 1;
  35   2          SCK = 0;
  36   2        }
  37   1      }
  38          /**********************************************************
  39                        接收一个字节
  40          ***********************************************************/
  41          
  42          unsigned char ReceiveByte(void)
  43          {
  44   1        unsigned char i,temp1,temp2;
  45   1        temp1=temp2=0;
  46   1        for(i=0;i<8;i++)
  47   1        {
  48   2          temp1=temp1<<1;
  49   2          SCK = 0;
  50   2          SCK = 1;                
  51   2          SCK = 0;
  52   2          if(SID) temp1++;
  53   2        }
  54   1        for(i=0;i<8;i++)
C51 COMPILER V9.56.0.0   LCD12864_S                                                        04/18/2017 17:14:57 PAGE 2   

  55   1        {
  56   2          temp2=temp2<<1;
  57   2          SCK = 0;
  58   2          SCK = 1;
  59   2          SCK = 0;
  60   2          if(SID) temp2++;
  61   2        }
  62   1        return ((0xf0&temp1)+(0x0f&temp2));
  63   1      }
  64          /****************************************************************
  65                                检查忙状态
  66          ******************************************************************/
  67          void CheckBusy( void )
  68          {
  69   1        do SendByte(0xfc);     //11111,RW(1),RS(0),0
  70   1        while(0x80&ReceiveByte());
  71   1      }
  72          
  73          /******************************************************************
  74                     写一个字节的指令
  75          *******************************************************************/
  76          void WriteCommand( unsigned char Cbyte )
  77          {
  78   1        CS = 1;
  79   1        CheckBusy();
  80   1        SendByte(0xf8);          //11111,RW(0),RS(0),0
  81   1        SendByte(0xf0&Cbyte);
  82   1        SendByte(0xf0&Cbyte<<4);
  83   1        CS = 0;
  84   1      }
  85          /*************************************************************
  86                           写一个字节的数据
  87          **************************************************************/
  88          void WriteData( unsigned char Dbyte )
  89          {
  90   1        CS = 1;
  91   1        CheckBusy();
  92   1        SendByte(0xfa);          //11111,RW(0),RS(1),0
  93   1        SendByte(0xf0&Dbyte);
  94   1        SendByte(0xf0&Dbyte<<4);
  95   1        CS = 0;
  96   1      }
  97          
  98          /******************************************************************
  99                                   lcd初始化函数
 100          *******************************************************************/
 101          void LcmInit( void )
 102          {
 103   1           WriteCommand(0x30);
 104   1           WriteCommand(0x03);
 105   1           WriteCommand(0x0c);
 106   1           WriteCommand(0x01);
 107   1           WriteCommand(0x06);
 108   1      }
 109          
 110          /*******************************************************************************************************
 111                                           设定光标函数
 112          ********************************************************************************************************/
 113          void Location_xy_12864(unsigned char x,unsigned char y)
 114          {
 115   1        switch(x)
 116   1        {
C51 COMPILER V9.56.0.0   LCD12864_S                                                        04/18/2017 17:14:57 PAGE 3   

 117   2          case 0:
 118   2            x=0x80;break;
 119   2          case 1:
 120   2            x=0x90;break;
 121   2          case 2:
 122   2            x=0x88;break;
 123   2          case 3:
 124   2            x=0x98;break;
 125   2          default:
 126   2            x=0x80;
 127   2        }
 128   1        y=y&0x07;
 129   1        WriteCommand(0x30);
 130   1        WriteCommand(y+x);
 131   1        WriteCommand(y+x);
 132   1      
 133   1      }
 134          /***********************************************************************************
 135                            清除文本
 136          ************************************************************************************/
 137          void LcmClearTXT( void )
 138          {
 139   1        unsigned char i;
 140   1        WriteCommand(0x30);
 141   1        WriteCommand(0x80);
 142   1        for(i=0;i<64;i++)
 143   1        WriteData(0x20);
 144   1        Location_xy_12864(0,0);     
 145   1      }
 146          /**************************************************************************************
 147                             清除图片
 148          *****************************************************************************************/
 149          void LcmClearBMP( void )
 150          {
 151   1        unsigned char i,j;
 152   1        WriteCommand(0x34);
 153   1        WriteCommand(0x36);
 154   1        for(i=0;i<32;i++)
 155   1        {
 156   2          WriteCommand(0x80|i);
 157   2          WriteCommand(0x80);
 158   2          for(j=0;j<32;j++)
 159   2          WriteData(0);
 160   2        }
 161   1      }
 162          
 163          
 164          
 165          /****************************************************************************************
 166                                显示字符串
 167          *****************************************************************************************/
 168          void PutStr(unsigned char row,unsigned char col,unsigned char *puts)
 169          {    
 170   1        WriteCommand(0x30);
 171   1        WriteCommand(AC_TABLE[8*row+col]);
 172   1        while(*puts != '\0')
 173   1        {
 174   2          if(col==8)
 175   2          {
 176   3            col=0;
 177   3            row++;
 178   3          }
C51 COMPILER V9.56.0.0   LCD12864_S                                                        04/18/2017 17:14:57 PAGE 4   

 179   2          if(row==4) row=0;
 180   2          WriteCommand(AC_TABLE[8*row+col]);
 181   2          WriteData(*puts);
 182   2          puts++;
 183   2          if(*puts != '\0')
 184   2          {
 185   3            WriteData(*puts);
 186   3            puts++;
 187   3            col++;
 188   3          }  
 189   2        }
 190   1      }
 191          
 192          
 193                   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    374    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
